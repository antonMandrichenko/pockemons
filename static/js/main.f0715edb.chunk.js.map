{"version":3,"sources":["reducers/getPockemons.js","reducers/getPockemon.js","reducers/index.js","actions/index.js","components/Pagination/index.js","containers/PockemonsList/index.js","containers/Pockemon/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["getPockemons","state","arguments","length","undefined","isLoading","pockemons","results","isFetched","action","type","Object","objectSpread","json","getPockemon","pockemon","JSON","parse","localStorage","getItem","name","combineReducers","REQUEST_POSTS","RECEIVE_POSTS","REQUEST_POCK","RECEIVE_POCK","fetchPockemons","url","dispatch","fetch","then","response","error","console","log","setItem","stringify","receivePosts","fetchPock","receivePock","GET_POCK_LS","getPock","Pagination","_ref","nextPockemons","previousPockemons","react_default","a","createElement","aria-label","className","concat","onClick","bind","href","connect","next","previous","getPocke","getPockFromLS","useEffect","map","item","key","react_router_dom","to","components_Pagination","isLoad","pockName","URL","window","location","pathname","slice","src","sprites","back_default","alt","front_default","abilities","ability","slot","moves","move","stats","stat","base_stat","App","basename","react_router","path","exact","component","PockemonsList","render","containers_Pockemon","Component","Boolean","hostname","match","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","react_redux_es","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f0715edb.chunk.js","sourcesContent":["const getPockemons = (state = {\n  isLoading: false,\n  pockemons: {\n    results:[]\n  },\n  isFetched: false\n}, action) => {\n  switch (action.type) {\n    case 'REQUEST_POSTS':\n      return {\n        ...state,\n        isLoading: true\n      };\n    case 'RECEIVE_POSTS':\n      return {\n        ...state,\n        pockemons:action.json,\n        isLoading: false,\n        isFetched: true\n      };\n    default:\n      return state\n    }\n  };\n\nexport default getPockemons\n","const getPockemon = (state = {\n  isLoading: false,\n  pockemon: null\n}, action) => {\n  switch (action.type) {\n    case 'REQUEST_POCK':\n      return {\n        ...state,\n        isLoading: true\n      };\n    case 'RECEIVE_POCK':\n      return {\n        ...state,\n        pockemon:action.json,\n        isLoading: false\n      };\n    case 'GET_POCK_LS':\n      return {\n        ...state,\n        pockemon: JSON.parse(localStorage.getItem(action.name))\n      };\n    default:\n      return state\n  }\n};\n\nexport default getPockemon\n","import { combineReducers } from 'redux'\nimport getPockemons from './getPockemons'\nimport getPockemon from './getPockemon'\n\nexport default combineReducers({\n  getPockemons,\n  getPockemon\n})\n","export const REQUEST_POSTS = 'REQUEST_POSTS';\nfunction requestPosts() {\n  return {\n    type: REQUEST_POSTS,\n  }\n}\n\nexport const RECEIVE_POSTS = 'RECEIVE_POSTS';\nfunction receivePosts(json) {\n  return {\n    type: RECEIVE_POSTS,\n    json\n  }\n}\n\nexport const REQUEST_POCK = 'REQUEST_POCK';\nfunction requestPock() {\n  return {\n    type: REQUEST_POCK,\n  }\n}\n\nexport const RECEIVE_POCK = 'RECEIVE_POCK';\nfunction receivePock(json) {\n  return {\n    type: RECEIVE_POCK,\n    json\n  }\n}\n\nexport function fetchPockemons(url) {\n  return function(dispatch) {\n    dispatch(requestPosts());\n    return fetch(url)\n      .then(\n        response => response.json(),\n        error => console.log('An error occurred.', error)\n      )\n      .then(json => {\n        localStorage.setItem('Pockemons', JSON.stringify(json));\n        return dispatch(receivePosts(json))\n      })\n  }\n}\n\nexport function fetchPock(url) {\n  return function(dispatch) {\n    dispatch(requestPock());\n    return fetch(url)\n      .then(\n        response => response.json(),\n        error => console.log('An error occurred.', error)\n      )\n      .then(json =>{\n        localStorage.setItem(json.name, JSON.stringify(json));\n        return dispatch(receivePock(json));\n      })\n  }\n}\n\nexport const GET_POCK_LS = 'GET_POCK_LS';\nexport function getPock(name) {\n  return {\n    type: GET_POCK_LS,\n    name\n  }\n}\n","import React from 'react';\n\nconst Pagination = ({ getPockemons,\n                      nextPockemons,\n                      previousPockemons\n}) =>{\n\n  return (\n    <nav aria-label=\"Page navigation example\">\n      <ul className=\"pagination\">\n        <li className={`page-item  ${previousPockemons ? null : 'disabled'}`}\n            onClick={previousPockemons ? getPockemons.bind(null, previousPockemons) : null}>\n          <a className=\"page-link\"\n             href=\"#\">\n            Previous\n          </a>\n        </li>\n        <li className=\"page-item\"\n            onClick={getPockemons.bind(null, nextPockemons)}>\n          <a className=\"page-link\"\n             href=\"#\">\n            Next\n          </a>\n        </li>\n      </ul>\n     </nav>\n\n  );\n};\n\nexport default Pagination\n","import React, {useEffect} from 'react';\nimport { connect } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport { fetchPockemons, fetchPock, getPock } from '../../actions'\nimport Pagination from \"../../components/Pagination\";\nimport './PockemonsList.css'\n\nconst PockemonsList = ({  isLoading,\n                          isFetched,\n                          pockemons,\n                          getPockemons,\n                          getPocke,\n                          getPockFromLS,\n                          nextPockemons,\n                          previousPockemons\n}) =>{\n\n  useEffect(() =>{\n    if (isFetched) {\n      pockemons = localStorage.getItem('Pockemons');\n    } else {\n      getPockemons('https://pokeapi.co/api/v2/pokemon?offset=10&limit=10')\n    }\n  }, []);\n\n  return (\n    <div className={\"container\"}>\n      <h2>Pockemons list</h2>\n      <ul className={\"list-group PockemonList\"}>\n      {isLoading\n        ? <div>Loading...</div>\n        : pockemons.map((item) =>\n            <li className={\"list-group-item\"}\n              key={item.name}\n              onClick={localStorage.getItem(item.name)\n                ? getPockFromLS.bind(null, item.name)\n                : getPocke.bind(null, item.url)}>\n              <NavLink to={`/${item.name}`}>\n                {item.name}\n              </NavLink>\n            </li>\n        )\n      }\n      </ul>\n      <Pagination getPockemons={getPockemons}\n                  nextPockemons={nextPockemons}\n                  previousPockemons={previousPockemons}/>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  pockemons: state.getPockemons.pockemons.results,\n  nextPockemons: state.getPockemons.pockemons.next,\n  previousPockemons: state.getPockemons.pockemons.previous,\n  isLoading: state.getPockemons.isLoading,\n  isFetched: state.getPockemons.isFetched\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getPockemons: url => dispatch(fetchPockemons(url)),\n  getPocke: url => dispatch(fetchPock(url)),\n  getPockFromLS: name => dispatch(getPock(name))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PockemonsList)\n","import React, {useEffect} from 'react';\nimport { connect } from \"react-redux\";\nimport { getPock } from '../../actions'\nimport {NavLink} from \"react-router-dom\";\n\nconst Pockemon = ({ pockemon,\n                    isLoad,\n                    getPockFromLS\n}) =>{\n\n  const parsedUrl = new URL(window.location.href);\n  const pockName = parsedUrl.pathname.slice(1);\n\n  useEffect(() => {\n    getPockFromLS(pockName)\n  }, []);\n\n  return (\n    <div className={\"container\"}>\n      <nav className={\"navbar navbar-light bg-light\"}>\n        <NavLink to='/' className={\"nav-link\"}>\n          To pockemons list\n        </NavLink>\n      </nav>\n      {isLoad\n        ? <div>Loading ... </div>\n        : !pockemon\n          ? null\n          : <div>\n            <h2>Name: {pockemon.name}</h2>\n            <img  src={pockemon.sprites.back_default} alt={\"back\"}/>\n            <img src={pockemon.sprites.front_default} alt={\"front\"}/>\n            <ul>\n              <li className={\"list-group-item active\"}>\n                Abilities:\n              </li>\n              {pockemon.abilities.map((ability) =>\n                <li className={\"list-group-item\"}\n                    key={ability.ability.name}>\n                  <strong>Name: </strong> {ability.ability.name}\n                  <strong> Slot: </strong> {ability.slot}\n                </li>\n              )}\n            </ul>\n            <ul>\n              <li className={\"list-group-item active\"}>\n                Moves:\n              </li>\n              {pockemon.moves.map((item) =>\n                <li className={\"list-group-item\"}\n                    key={item.move.name}>\n                  <strong>{item.move.name}</strong>\n                </li>\n              )}\n            </ul>\n            <ul>\n              <li className={\"list-group-item active\"}>\n                Moves:\n              </li>\n              {pockemon.stats.map((item) =>\n                <li className={\"list-group-item\"}\n                    key={item.stat.name}>\n                  <strong>{item.stat.name} </strong>\n                  Base stat: {item.base_stat}\n                </li>\n              )}\n            </ul>\n          </div>\n      }\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  pockemon: state.getPockemon.pockemon,\n  isLoad: state.getPockemon.isLoading\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getPockFromLS: name => dispatch(getPock(name)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Pockemon)\n","import React, { Component } from 'react';\nimport {BrowserRouter, Route} from 'react-router-dom';\nimport PockemonsList from \"../../containers/PockemonsList\";\nimport Pockemon from \"../../containers/Pockemon\";\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter basename={'/pockemons'}>\n        <div className=\"App\">\n          <Route\n            path='/'\n            exact\n            component={PockemonsList}/>\n          <Route\n            path={'/:pockemonname'}\n            exact\n            render={() => <Pockemon/>}/>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport {Provider} from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport rootReducer from './reducers';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}